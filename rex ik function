@name rex ik function
#-- Creator: Shadowscion & ClockEFFX

if(first()){
    function number icos(A, B, C) {
        return acos((A^2 + B^2 - C^2) / (2*A*B))
    }
    
    function ik(Base2:entity, NBase, NHipA, NHipB, NKnee, NAnkle, NFoot, LengthA, LengthB, LengthC, Base:entity, Target:vector, Ground, Inverted, D, FootAng:angle) {
        local AxisWorld = Target - holoEntity(NHipA):pos()
        local AxisLocal = holoEntity(NBase):toLocalAxis(AxisWorld)
        
        holoAng(NBase, Base2:toWorld(ang(0,D,0)))
        
        holoAng(NHipA, holoEntity(NBase):toWorld(ang(0, 0, atan(AxisLocal:z(), AxisLocal:y()) + Inverted)))
        
        local AxisLocal = holoEntity(NHipA):toLocalAxis(AxisWorld)
        local Fraction = 1 - min(1, holoEntity(NHipB):pos():distance(Target) / (LengthA + LengthC) - 0.5)
        
        holoAng(NHipB, holoEntity(NHipA):toWorld(ang(atan(-AxisLocal:x(), AxisLocal:z()) - (90/2) + (90/1.2)*Fraction, 180, 0)))
        
        local AxisLocal = holoEntity(NHipA):toLocalAxis(Target - holoEntity(NKnee):pos())
        local Distance = min(AxisLocal:length(), LengthB + LengthC)*1.1
        
        holoAng(NKnee, holoEntity(NHipA):toWorld(ang(atan(AxisLocal:x(), AxisLocal:z()) + icos(Distance, LengthB, LengthC), 0, 0)))
        holoAng(NAnkle, holoEntity(NKnee):toWorld(ang(icos(LengthC, LengthB, Distance) + 180, 0, 0)))
        
        holoAng(NFoot, FootAng+Base:toWorld(ang(0,D,0)))
    }
}
