@name EGP Hud
@inputs [Gun_Right Gun_Left]:entity WeaponMode [T1 T2 T3 T4 T5 T6 T7 T8]:vector A1 A2 A3 A4 A5 A6 A7 A8
@inputs XWL:wirelink [Chair]:entity Ammo1 Ammo2 Ready1 Ready2
@persist Driver:entity OffsetID Thickness
if(dupefinished()){reset()}
if(first() | changed(Chair:driver())){
    XWL:egpClear()
    
    holoCreate(1)
    holoAlpha(1,0)
    
    Driver = owner()#Chair:driver()
    Hi = egpScrH(Driver)
    Wi = egpScrW(Driver)

    rangerPersist(1)
    runOnTick(1)
    interval(50)     
    
    #Weapon Icon Base
    XWL:egpBox(1,vec2(Wi*0.85,Hi*0.85),vec2(Wi*0.185,Hi*0.15)*vec2(1,0.9))
    XWL:egpColor(1,vec4(255*0.5,255*0.5,255*0.3,120))
    
    #Weapon Icon Right Line
    XWL:egpBox(2,vec2(Wi*0.938,Hi*0.85),vec2(Wi*0.008,Hi*0.147)*vec2(1,0.9))
    XWL:egpColor(2,vec4(255,255,105,255))
    
    #Weapon Icon Bottom Line
    XWL:egpBox(3,vec2(Wi*0.8458,Hi*0.906),vec2(Wi*0.185,Hi*0.0165)*vec2(0.9425,1.1))
    XWL:egpColor(3,vec4(255*0.3,200*0.3,25,255))
    
    
    #Weapon Icon Weapon Name
    XWL:egpText(4,"",vec2(Wi*0.8,Hi*0.898))
    XWL:egpColor(4,vec4(255,255,105,255))
    
    #Weapon Icon Weapon Ammo
    XWL:egpText(5,"",vec2(Wi*0.78,Hi*0.8175))
    XWL:egpColor(5,vec4(190,75,20,215))
    XWL:egpSize(5,45)
    
    #Hud Lines Left
    XWL:egpLine(7,vec2(Wi*(0.5-0.15),Hi*(0.5-0.1218)),vec2(Wi*(0.5-0.15),Hi*(0.5-0.005)))
    XWL:egpColor(7,vec4(255,255,105,255))
    
    XWL:egpLine(8,vec2(Wi*(0.5-0.15),Hi*(0.5+0.120)),vec2(Wi*(0.5-0.15),Hi*(0.5+0.005)))
    XWL:egpColor(8,vec4(255,255,105,255))
    
    
    #Hud Lines Right
    XWL:egpLine(9,vec2(Wi*(0.5+0.15),Hi*(0.5-0.1218)),vec2(Wi*(0.5+0.15),Hi*(0.5-0.005)))
    XWL:egpColor(9,vec4(255,255,105,255))
    
    XWL:egpLine(10,vec2(Wi*(0.5+0.15),Hi*(0.5+0.120)),vec2(Wi*(0.5+0.15),Hi*(0.5+0.005)))
    XWL:egpColor(10,vec4(255,255,105,255))
    
    
    #Hud Boxes Left
    XWL:egpBox(11,vec2(Wi*(0.5-0.145),Hi*(0.5+0.12)),vec2(Wi*(0.007),Hi*(0.005)))
    XWL:egpColor(11,vec4(255,255,105,255))
    
    XWL:egpBox(12,vec2(Wi*(0.5-0.145),Hi*(0.5-0.12)),vec2(Wi*(0.007),Hi*(0.005)))
    XWL:egpColor(12,vec4(255,255,105,255))
    
    #Hud Boxes Right
    XWL:egpBox(13,vec2(Wi*(0.5+0.1465),Hi*(0.5+0.12)),vec2(Wi*(0.007),Hi*(0.005)))
    XWL:egpColor(13,vec4(255,255,105,255))
    
    XWL:egpBox(14,vec2(Wi*(0.5+0.1465),Hi*(0.5-0.12)),vec2(Wi*(0.007),Hi*(0.005)))
    XWL:egpColor(14,vec4(255,255,105,255))
    
    #Minigun Crosshair Dot
    XWL:egp3DTracker(15,vec())
    XWL:egpParent(15,holoEntity(1))
    
    XWL:egpCircle(16,vec2(0,0),vec2(3))
    XWL:egpColor(16,vec4(255,255,105,255))
    XWL:egpParent(16,15)
    
    OffsetID = 16
    
    P = vec2()
    
    Size=vec2(45)
    
    Thickness = 3
    
    XWL:egp3DTracker(1+OffsetID,T1)
    XWL:egp3DTracker(2+OffsetID,T2)
    XWL:egp3DTracker(3+OffsetID,T3)
    XWL:egp3DTracker(4+OffsetID,T4)
    XWL:egp3DTracker(5+OffsetID,T5)
    XWL:egp3DTracker(6+OffsetID,T6)
    XWL:egp3DTracker(7+OffsetID,T7)
    XWL:egp3DTracker(8+OffsetID,T8)
    
    
    XWL:egpBoxOutline(9+OffsetID,vec2()+P,Size)
    XWL:egpColor(9+OffsetID,vec4(255,255,165,255))
    XWL:egpSize(9+OffsetID,Thickness)
    XWL:egpParent(9+OffsetID,1+OffsetID)
    
    XWL:egpBoxOutline(10+OffsetID,vec2()+P,Size)
    XWL:egpColor(10+OffsetID,vec4(255,255,165,255))
    XWL:egpSize(10+OffsetID,Thickness)
    XWL:egpParent(10+OffsetID,2+OffsetID)
    
    XWL:egpBoxOutline(11+OffsetID,vec2()+P,Size)
    XWL:egpColor(11+OffsetID,vec4(255,255,165,255))
    XWL:egpSize(11+OffsetID,Thickness)
    XWL:egpParent(11+OffsetID,3+OffsetID)
    
    XWL:egpBoxOutline(12+OffsetID,vec2()+P,Size)
    XWL:egpColor(12+OffsetID,vec4(255,255,165,255))
    XWL:egpSize(12+OffsetID,Thickness)
    XWL:egpParent(12+OffsetID,4+OffsetID)
    
    XWL:egpBoxOutline(13+OffsetID,vec2()+P,Size)
    XWL:egpColor(13+OffsetID,vec4(255,255,165,255))
    XWL:egpSize(13+OffsetID,Thickness)
    XWL:egpParent(13+OffsetID,5+OffsetID)
    
    XWL:egpBoxOutline(14+OffsetID,vec2()+P,Size)
    XWL:egpColor(14+OffsetID,vec4(255,255,165,255))
    XWL:egpSize(14+OffsetID,Thickness)
    XWL:egpParent(14+OffsetID,6+OffsetID)
    
    XWL:egpBoxOutline(15+OffsetID,vec2()+P,Size)
    XWL:egpColor(15+OffsetID,vec4(255,255,165,255))
    XWL:egpSize(15+OffsetID,Thickness)
    XWL:egpParent(15+OffsetID,7+OffsetID)
    
    XWL:egpBoxOutline(16+OffsetID,vec2()+P,Size)
    XWL:egpColor(16+OffsetID,vec4(255,255,165,255))
    XWL:egpSize(16+OffsetID,Thickness)
    XWL:egpParent(16+OffsetID,8+OffsetID)
    rangerPersist(1)
    rangerHitEntities(0)
}
if(WeaponMode){
if(changed(T1)|changed(A1)&A1){
    XWL:egpSize(9+OffsetID,Thickness*(T1!=vec())&!A1)
    XWL:egpPos(1+OffsetID,T1)
}
if(changed(T2)|changed(A2)&A2){
    XWL:egpSize(10+OffsetID,Thickness*(T2!=vec())&!A2)
    XWL:egpPos(2+OffsetID,T2)
}
if(changed(T3)|changed(A3)&A3){
    XWL:egpSize(11+OffsetID,Thickness*(T3!=vec())&!A3)
    XWL:egpPos(3+OffsetID,T3)
}
if(changed(T4)|changed(A4)&A4){
    XWL:egpSize(12+OffsetID,Thickness*(T4!=vec())&!A4)
    XWL:egpPos(4+OffsetID,T4)
}
if(changed(T5)|changed(A5)&A5){
    XWL:egpSize(13+OffsetID,Thickness*(T5!=vec())&!A5)
    XWL:egpPos(5+OffsetID,T5)
}
if(changed(T6)|changed(A6)&A6){
    XWL:egpSize(14+OffsetID,Thickness*(T6!=vec())&!A6)
    XWL:egpPos(6+OffsetID,T6)
}
if(changed(T7)|changed(A7)&A7){
    XWL:egpSize(15+OffsetID,Thickness*(T7!=vec())&!A7)
    XWL:egpPos(7+OffsetID,T7)
}
if(changed(T8)|changed(A8)&A8){
    XWL:egpSize(16+OffsetID,Thickness*(T8!=vec())&!A8)
    XWL:egpPos(8+OffsetID,T8)
}
}
if(changed(WeaponMode)|changed(Chair:driver())){
    if(WeaponMode){
        for(I=9+OffsetID,16+OffsetID){
            XWL:egpSize(I,0)
            XWL:egpPos(I,vec2(0))
        }
    }
}
if(clk()){
    interval(50)
    if(WeaponMode==0){
        XWL:egpSetText(4,"2x 30 mm XGAU-8R RAC")
        XWL:egpSetText(5," Ammo: 1800")
        XWL:egpColor(5,vec4(190,75,20,215))
    }else{
        if(changed(Ready2)){
            XWL:egpColor(5,vec(190,75,20)*Ready2)
        }
        XWL:egpSetText(4," AGM-114P AT Missiles")
        XWL:egpSetText(5," Locked: "+toString(Ammo2)+"/8")
    }
    RangerL=rangerOffset(9999,Gun_Left:pos(),Gun_Left:forward())
    RangerR=rangerOffset(9999,Gun_Right:pos(),Gun_Right:forward())
    
    Pos=mix(RangerL:pos(),RangerR:pos(),0.5)
    holoPos(1,Pos)
}
